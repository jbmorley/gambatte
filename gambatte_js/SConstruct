import subprocess
import os

cflags   = ARGUMENTS.get('CFLAGS', '-Wall -Wextra -O2 -fomit-frame-pointer')
cxxflags = ARGUMENTS.get('CXXFLAGS', cflags + ' -fno-exceptions -fno-rtti')
vars = Variables()
vars.Add('CC')
vars.Add('CXX')

env = Environment(CPPPATH = ['src', '../libgambatte/include', '../common', '../libgambatte/src'],
                  CFLAGS = cflags,
                  CXXFLAGS = cxxflags,
                  CPPDEFINES = [ 'HAVE_STDINT_H', None ],
                  variables = vars)
env.Tool('emscripten', toolpath=[os.environ['EMSCRIPTEN_TOOL_PATH']])
# env.ParseConfig('sdl-config --cflags --libs')

sourceFiles = Split('''
			../gambatte_sdl/src/audiosink.cpp
			../gambatte_sdl/src/blitterwrapper.cpp
			../gambatte_sdl/src/parser.cpp
			../gambatte_sdl/src/sdlblitter.cpp
			../gambatte_sdl/src/str_to_sdlkey.cpp
			../gambatte_sdl/src/usec.cpp
			../common/adaptivesleep.cpp
			../common/resample/src/chainresampler.cpp
			../common/resample/src/i0.cpp
			../common/resample/src/kaiser50sinc.cpp
			../common/resample/src/kaiser70sinc.cpp
			../common/resample/src/makesinckernel.cpp
			../common/resample/src/resamplerinfo.cpp
			../common/resample/src/u48div.cpp
			../common/rateest.cpp
			../common/skipsched.cpp
			../common/videolink/rgb32conv.cpp
			../common/videolink/vfilterinfo.cpp
			../common/videolink/vfilters/catrom2x.cpp
			../common/videolink/vfilters/catrom3x.cpp
			../common/videolink/vfilters/kreed2xsai.cpp
			../common/videolink/vfilters/maxsthq2x.cpp
			../common/videolink/vfilters/maxsthq3x.cpp
			../libgambatte/src/bitmap_font.cpp
			../libgambatte/src/cpu.cpp
			../libgambatte/src/gambatte.cpp
			../libgambatte/src/initstate.cpp
			../libgambatte/src/interrupter.cpp
			../libgambatte/src/interruptrequester.cpp
			../libgambatte/src/loadres.cpp
			../libgambatte/src/memory.cpp
			../libgambatte/src/sound.cpp
			../libgambatte/src/state_osd_elements.cpp
			../libgambatte/src/statesaver.cpp
			../libgambatte/src/tima.cpp
			../libgambatte/src/video.cpp
			../libgambatte/src/mem/cartridge.cpp
			../libgambatte/src/mem/memptrs.cpp
			../libgambatte/src/mem/pakinfo.cpp
			../libgambatte/src/mem/rtc.cpp
			../libgambatte/src/sound/channel1.cpp
			../libgambatte/src/sound/channel2.cpp
			../libgambatte/src/sound/channel3.cpp
			../libgambatte/src/sound/channel4.cpp
			../libgambatte/src/sound/duty_unit.cpp
			../libgambatte/src/sound/envelope_unit.cpp
			../libgambatte/src/sound/length_counter.cpp
			../libgambatte/src/video/ly_counter.cpp
			../libgambatte/src/video/lyc_irq.cpp
			../libgambatte/src/video/next_m0_time.cpp
			../libgambatte/src/video/ppu.cpp
			../libgambatte/src/video/sprite_mapper.cpp
		   ''')

conf = env.Configure()
conf.CheckLib('z')
conf.Finish()

version_str_def = []
if Dir('../.git').exists():
	try:
		git_revno = subprocess.check_output("git rev-list HEAD --count", shell=True).strip()
		version_str_def = [ 'GAMBATTE_SDL_VERSION_STR', r'\"r' + git_revno + r'\"' ]
	except subprocess.CalledProcessError:
		pass

env.Program('gambatte_sdl',
            [env.Object('../gambatte_sdl/src/gambatte_sdl.cpp',
                        CPPDEFINES = env['CPPDEFINES'] + [version_str_def])]
            + sourceFiles)
